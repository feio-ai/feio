<div .container-fluid>
  <div .new-header>
    <div .row>
        <div .col-md-12>
            <h1 .site-header-1>
                FEIO.AI
    <div .row>
        <div .col-md-12>
            <h1 .site-subhead>
                Cloud-based, Hardware Acceleration
    
    <div .row>
        <div .col-md-8 .col-md-offset-3>
            <h1 .site-header>
                <span .bolded>Fast:</span> Exploit Parallelism
    <div .row> 
        <div .col-md-8 .col-md-offset-3>
            <h1 .site-header>
                <span .bolded> Efficient:</span> Dedicated Hardware
    <div .row>
        <div .col-md-8 .col-md-offset-3>
            <h1 .site-header>
                <span .bolded>Connectable:</span> Available on AWS          

<div .container-fluid>
  <div .shape-init>
  <div .shape>

<div .container-fluid>
        <h1 .page-header>
            How It Works
<div .container>
    <div .row>
        <div .col-md-8>
            <div .sectional2>
                
                    <h1>
                        <span .bolded2> 1. </span> Identify Bottlenecks In Application
                    <p>
                        Looking for parallelism, identify performance bottlenecks in an application. Examples include repetitive concurrent multiplications, in the case of ML,
                        or parallel data accesses.
  
    <div .row>    
        <div .col-md-8 .col-md-offset-2>
            <div .sectional2>    
                
                    <h1>
                        <span .bolded2> 2. </span> Build Acceleration Kernel
                    <p>
                        GPGPUs, TPUs, FPGAs as well as top-level software components are available for use through cloud services like AWS and Nimbix.
                        New frameworks allow for fast development of optimized acceleration kernels. 


    <div .row>    
        <div .col-md-8 .col-md-offset-4>
            <div .sectional2>
                   
                    <h1>
                        <span .bolded2> 3. </span> Connect Components
                    <p>
                        If the entire application resides on the accelerated device, like a fully migrated TF model, then setup data pipelines. Otherwise configure communication channels.

<div .container-fluid>
        <h1 .page-header>
            Products

<div .container-fluid>
    <div .sectional>

<div .container-fluid>
    <div .row>
        <div .col-md-6>
            <div .panel .panel-default>
                <div .panel-heading>
                    <h1> F1-CNN
                <div .panel-body>    
                    <h2> Resnet-50 convolutional neural net mapped and deployed on an AWS F1 instance. 
                    <p>
                        When mapped to an FPGA, ResNet50 can identify images from ImageNet database in an average of 250 ms or half the time of an i7 CPU.
                        This example is demonstrative of the ability to fully map trained neural networks to hardware optimized for inference. FPGAs can act as ML accelerators either attached as coprocessors
                        or, as in this case, executing the complete model. Coprocessors could be used for tasks like matrix multiplication or exponential functions.
                    <a .btn .btn-primary .btn-lg .btn-block href="#" > Connect via AWS
                    <a .btn .btn-secondary .btn-lg .btn-block href="#" > Documentation (in progress)
        <div .col-md-6>
            <div .panel .panel-default>
                <div .panel-heading>
                    <h1> MCAccel
                <div .panel-body>
                    <h2>Accelerated Monte Carlo Simulation for options pricing. 
                    <p>
                        Monte Carlo Methods are used in quantitative finance to forecast possible pricing paths or risk scenarios. Specifically, a value is sampled from a standard normal distribution function
                        and applied to the pricing formula for price a small increment of time in the future. This computation is done hundreds of times over ~700k-1M paths, depending on the application. In an FPGA, this 
                        calculation can be performed in parallel batches in a fraction of the time. OpenCL allows the programmer to decide worker and group sizes and Xilinx Vitis can perform other parallel optimizations at the RTL level.
                    <a .btn .btn-primary .btn-lg .btn-block href="#" > Try it out!
                    <a .btn .btn-secondary .btn-lg .btn-block href="#" > Documentation (in progress)


<div .container-fluid>
        <h1 .page-header>
            Technology

<div .container-fluid>
    <div .sectional>

<div .container-fluid>
    <div .row>
        <div .col-md-4>
            <div .panel .panel-default>
                <div .panel-heading>
                    <h1> AWS F1 Instances
                <div .panel-body>    
                    <p> Once setup, allows for easy development and deployment of FPGA based Hardware Microservices
                    <p> Advantages
                    <ul> 
                        <li> Xilinx Vitis development flow
                        <li> Free (pay for EC2 instance)
                    <ul> Drawbacks
                        <li> Difficult to setup development flow
                        <li> Help is hard to find because service is new

        <div .col-md-4>
            <div .panel .panel-default>
                <div .panel-heading>
                    <h1> Spatial
                <div .panel-body>
                    <p> Acceleration Framework that can both map trained Tensorflow models to AWS F1 instances and be used
                        to build custom accelerated applications. Like RocketChip, Spatial is built upon the Scala eDSL, Chisel.


        <div .col-md-4>
            <div .panel .panel-default>
                <div .panel-heading>
                    <h1> RocketChip
                <div .panel-body>
                    <p> Opensource generator for development and largescale simulation of RISC-V SoC
                    <p> Rocketchip generator:
                    <ul>
                        <li> Developed at UCSB, the generator allows for production of custom SoC
                        <li> We used to develop MC coprocessor consisting of random number generator and high throughput IO 
                        <li> Chisel, an EDSL of Scala, is the main programming tool
                    
                    <p> Firesim
                    <ul>
                        <li> Powerful, cycle-accurate, simulation tool for thousands of multicore nodes
                        





<div .container-fluid>
        <h1 .page-header>
            Motivation

<div .container>
    <div .sectional>
        <p>
            Heterogeneous computing frameworks will be the new norm for compute-intensive systems. For proof look no further than projects like Google's TPU, Microsoft's Catapult, 
            or newer companies like Groq or Intensivate. These systems can be formed with GPUs, FPGAs, ASICs and/or combinations of the three. Trends like Apple moving to chips designed in house
            will continue because custom architectures can better fit specific domains.
        <p>    
            FPGAs are fast, flexible, and very efficient. GPUs are also fast and flexible (sometimes in greater amounts) but these gains come at 
            the expense of energy efficiency. Considering current environmental crises, we as engineers should weigh energy efficiency as heavily 
            as other application characteristics. Lesser energy demands is also important for cloud service providers hoping to reduce their bottom line. 
            FPGAs are preferable to GPUs because they provide equal speed and reprogrammability capability but with extreme efficiency. 
        <p>    
            Widespread adoption of FPGA technology has been stymied by two factors: device/toolchain costs and programming difficulty. The lack of cloud-based FPGAs 
            necessitated the purchase of a device along with the software licensing fee, both large upfront costs. Luckily within the last two years, 
            FPGAs have been made available on platforms like AWS, Microsoft, Nimbix, and others. Users no longer need local access to the device. 
        <p>    
            The second hindrance is the programming of the FPGA itself. Requiring fundamental knowledge of digital systems and the electrical components of a 
            FPGA, Hardware Description Languages like Verilog and VHDL are largely inaccessible to software engineers. Again in recent years the development 
            of High level synthesis, OO-to-HDL compilers, eDSLs, and acceleration frameworks have provided easier development flows for more software oriented 
            engineers. 
        <p>    
            While some will  vehemently argue against the use of such tools, we propose using these to produce an initial outline of an application 
            followed by fine tuning of generated RTL for better performance ( sometimes unnecessary).
        <p>
            Tools like RocketChip allow for the inexpensive and rapid prototyping of custom hardware. RocketChip is open source and can work from outline to tapeout saving
            giving very small companies a chance to compete against traditional chip manufacturers. Intensivate is a perfect example. 


<div .container-fluid>
        <h1 .page-header>
            About Me

<div .container>
    <div .sectional>
        <p>
            FEIO is the branding for independent research conducted by Allen Vannoppen Jr. I received a Masters in ECE and have extended those research efforts here. 
            My focus is on exploring the variety of new and creative frameworks for building hardware acceleration solutions. Please reach out to me via email, 
            Github, LinkedIn, etc. with any questions, comments, or projects.
    <div .row>
        <div .col-md-4>
            <p .text-center>
                <a href="https://github.com/feio-ai">
                    <i .fa .fa-github>
        <div .col-md-4>
            <p .text-center>
                <a href="https://www.linkedin.com/in/allen-vannoppen-jr-a96563a7/">
                    <i .fa .fa-linkedin>
        <div .col-md-4>
            <p .text-center>
                <a href="mailto: feioaccel@gmail.com">
                    <i .fa .fa-gmail>